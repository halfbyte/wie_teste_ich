  #######  
  ### => Generated by mindmatters_story_writer
  #######

  require File.dirname(__FILE__) + "/helper"


steps_for(:company_gets_the_dashboard_site) do

  Given "the user is logged in as company" do
    create_and_login_as_company
  end
  
  Given "a company exists" do
    @company = @user.company
  end
  
  When "he gets the dashboard" do
    get "/users/#{@user.id}/dashboard"
  end
  
  Then "the response should be success" do
    puts '-----------'
    puts @user.inspect
    puts @user.company.inspect
    puts @user.company.bookmarks.inspect
    puts @user.company.bookmarks.five_newest_public.inspect
    puts '-----------'
    response.should be_success
  end
  
  Then "the company dashboard page should be shown" do
    pending # TODO: Implement "And the company dashboard page should be shown"-Test for story "company_dashboard_is_shown"
  end
  
  Then "the shown page contains an edit-link" do
    pending # TODO: Implement "And the shown page contains an edit-link"-Test for story "company_dashboard_is_shown"
  end
  
  Then "the shown page contains an profile-link" do
    pending # TODO: Implement "And the shown page contains an profile-link"-Test for story "company_dashboard_is_shown"
  end
  
  Then "the shown page contains an watchlist-link" do
    pending # TODO: Implement "And the shown page contains an watchlist-link"-Test for story "company_dashboard_is_shown"
  end
  
  Then "the shown page doesn't contain an dashboard-link" do
    pending # TODO: Implement "And the shown page doesn't contain an dashboard-link"-Test for story "company_dashboard_is_shown"
  end
  
end

#### END OF company_gets_the_dashboard_site ####


steps_for(:company_gets_the_profile_site) do

  Then "a company exists" do
    pending # TODO: Implement "And a company exists"-Test for story "company_dashboard_is_shown"
  end
  
  When "he gets the profile-site" do
    pending # TODO: Implement "When he gets the profile-site"-Test for story "company_dashboard_is_shown"
  end
  
  When "the company profile page should be shown" do
    pending # TODO: Implement "And the company profile page should be shown"-Test for story "company_dashboard_is_shown"
  end
  
  When "the shown page contains an dashboard-link" do
    pending # TODO: Implement "And the shown page contains an dashboard-link"-Test for story "company_dashboard_is_shown"
  end
  
  When "the shown page contains an watchlist-link" do
    pending # TODO: Implement "And the shown page contains an watchlist-link"-Test for story "company_dashboard_is_shown"
  end
  
  When "the shown page doesn't contain an profile-link" do
    pending # TODO: Implement "And the shown page doesn't contain an profile-link"-Test for story "company_dashboard_is_shown"
  end
  
end

#### END OF company_gets_the_profile_site ####


steps_for(:company_gets_the_watchlist_site) do

  When "a company exists" do
    pending # TODO: Implement "And a company exists"-Test for story "company_dashboard_is_shown"
  end
  
  When "he gets the watchlist-site" do
    pending # TODO: Implement "When he gets the watchlist-site"-Test for story "company_dashboard_is_shown"
  end
  
  When "the company watchlist-page should be shown" do
    pending # TODO: Implement "And the company watchlist-page should be shown"-Test for story "company_dashboard_is_shown"
  end
  
  When "the shown page contains an profile-link" do
    pending # TODO: Implement "And the shown page contains an profile-link"-Test for story "company_dashboard_is_shown"
  end
  
  When "the shown page doesn't contain an watchlist-link" do
    pending # TODO: Implement "And the shown page doesn't contain an watchlist-link"-Test for story "company_dashboard_is_shown"
  end
  
end

with_steps_for(:company_gets_the_dashboard_site, :company_gets_the_profile_site) do
  run_local_story "company_dashboard_is_shown", :type => RailsStory
end
