  #######  
  ### => Generated by mindmatters_story_writer
  #######

  require File.dirname(__FILE__) + "/helper"


steps_for(:company_clicks_onto_the_register_link_in_the_email) do

  Given "the user is not logged in" do
    pending # TODO: Implement "Given the user is not logged in"-Test for story "company_invitation_story"
  end
  
  Given "a company exists" do
    pending # TODO: Implement "And a company exists"-Test for story "company_invitation_story"
  end
  
  When "he clicks onto the invitation link in the email" do
    pending # TODO: Implement "When he clicks onto the invitation link in the email"-Test for story "company_invitation_story"
  end
  
  Then "the response should be success" do
    pending # TODO: Implement "Then the response should be success"-Test for story "company_invitation_story"
  end
  
  Then "the company show page should be shown" do
    pending # TODO: Implement "And the company show page should be shown"-Test for story "company_invitation_story"
  end
  
  Then "the shown page contains a register company link" do
    pending # TODO: Implement "And the shown page contains a register company link"-Test for story "company_invitation_story"
  end
  
end

#### END OF company_clicks_onto_the_register_link_in_the_email ####


steps_for(:company_is_currently_at_the_welcome_page_and_clicks_the_register_link) do

  When "the user clicks the register link" do
    pending # TODO: Implement "When the user clicks the register link"-Test for story "company_invitation_story"
  end
  
  Then "the user should be forwarded to the company register page" do
    pending # TODO: Implement "Then the user should be forwarded to the company register page"-Test for story "company_invitation_story"
  end
  
  Then "the company register page should be shown" do
    pending # TODO: Implement "And the company register page should be shown"-Test for story "company_invitation_story"
  end
  
end

with_steps_for(:company_clicks_onto_the_register_link_in_the_email) do
  run_local_story "company_invitation_story", :type => RailsStory
end
